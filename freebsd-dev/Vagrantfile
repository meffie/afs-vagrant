# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.guest = :freebsd
  # latest https://atlas.hashicorp.com/boxes/search?order=desc&page=1&provider=&q=freebsd-11.0&sort=updated&utf8=%E2%9C%93
  config.vm.box = "freebsd/FreeBSD-11.0-BETA3"
  config.vm.hostname = "openafs-freebsd-dev"
  config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  config.vm.base_mac = "080027D14C66"
  config.ssh.shell = "sh"
  ["vmware_fusion", "vmware_workstation", "virtualbox"].each do |provider|
    config.vm.provider provider do |v, override|
      host = RbConfig::CONFIG['host_os']
      v.memory = get_memory_setting(host)
      v.cpus = get_cpu_setting(host)
    end
  end
  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.customize ["modifyvm", :id, "--audio", "none"]
    vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
    vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
  end

  # config.vm.provision "shell", path: "provision_script.sh"
end

# Use 1/divider of the available memory
# TODO: use 1/divider or 2 GB, whichever is larger
def get_memory_setting(host)
  divider = 4
  if host =~ /darwin/
    mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / divider
  elsif host =~ /linux/
    mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / divider
  else # Windows
    mem = `for /F "tokens=2 delims==" %i in ('wmic computersystem get TotalPhysicalMemory /value') do @echo %i`.to_i / 1024 / 1024 / divider
  end
  return mem
end

def get_cpu_setting(host)
  if host =~ /darwin/
    cpus = `sysctl -n hw.ncpu`.to_i
  elsif host =~ /linux/
    cpus = `nproc`.to_i
  else # Windows
    cpus = `for /F "tokens=2 delims==" %i in ('wmic cpu get NumberOfCores /value') do @echo %i`.to_i
  end
  return cpus
end
